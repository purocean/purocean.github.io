(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{551:function(t,s,a){t.exports=a.p+"assets/img/img-20230120113833.ed8a6dac.png"},552:function(t,s,a){t.exports=a.p+"assets/img/img-20230120113947.80b9a769.png"},553:function(t,s,a){t.exports=a.p+"assets/img/img-20230123110638.ce4499c6.png"},625:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[s("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note"),s("OutboundLink")],1),t._v(" 是我编写的一款面向程序员的笔记应用。这里我将会写下一些关于 Yank Note 的文章")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"/yank-note-01"}},[t._v("Yank Note 系列 01 - 为什么要自己写笔记软件？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-02"}},[t._v("Yank Note 系列 02 - Markdown 渲染性能优化之路")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-03"}},[t._v("Yank Note 系列 03 - 同内存泄露的艰难战斗！")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-04"}},[t._v("Yank Note 系列 04 - 编辑和预览同步滚动方案")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-05"}},[t._v("Yank Note 系列 05 - 关于本地历史功能")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-06"}},[t._v("Yank Note 系列 06 - 使用人工智能写文章是什么体验？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-07"}},[t._v("Yank Note 系列 07 - 性能暴增 132 倍的秘密——重写")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-08"}},[t._v("Yank Note 系列 08 - 优化 Katex 公式渲染性能")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-09"}},[t._v("Yank Note 系列 09 - 关于流的使用")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-10"}},[t._v("Yank Note 系列 10 - 新增自定义快捷键功能")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-11"}},[t._v("Yank Note 系列 11 - 预览内查找功能")])]),t._v(" "),s("li",[s("a",{attrs:{href:"/yank-note-12"}},[t._v("Yank Note 系列 12 - 高效构建仓库索引与知识图谱")])])])]),t._v(" "),s("p",[t._v("最近遇到三件事：")]),t._v(" "),s("p",[t._v("一是公司有个服务总是崩，同事查出来的原因是应用将文件直接读到内存来处理。遇到大一点的文件，内存占用直接飙升，64G的内存都不够使。")]),t._v(" "),s("p",[t._v("二是为了过年回家能看到我养的龟的状态，打算使用旧的安卓手机做监控。使用的 "),s("a",{attrs:{href:"https://play.google.com/store/apps/details?id=com.pas.webcam",target:"_blank",rel:"noopener noreferrer"}},[t._v("IP Webcam"),s("OutboundLink")],1),t._v(" 这款软件。它的视频有个模式竟然能使用 "),s("code",[t._v("<img>")]),t._v(" 标签来播放视频，颠覆了我的认知。")]),t._v(" "),s("p",[t._v("最后在开发 Yank Note 的过程中，不少功能都用到了“流”，包括 nodejs 的 Stream 模块和浏览器端的 Web Stream 相关特性。")]),t._v(" "),s("p",[t._v("因此我想写一篇关于“流”的文章。")]),t._v(" "),s("h2",{attrs:{id:"使用流来读取文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用流来读取文件"}},[t._v("#")]),t._v(" 使用流来读取文件")]),t._v(" "),s("p",[t._v("比如读取一个文本文件来处理，有两种思路：一种是将文件直接读取到内存中，二是读一部分处理一部分。对于小文件，比如需要解析 json 配置文件，当然是前一种方式比较方便（json 也可以流式解析）。但是对于下载文件的场景，如果你把文件抓取到内存中，再保存文件，这样就得不偿失了。更好的做法是下载一部分就保存一部分。")]),t._v(" "),s("p",[t._v("对比如下伪代码：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下载后再保存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("downloadUrl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 流式下载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("downloadUrl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0o755")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("对于下载大文件这个场景来说，无疑是使用流更加节省内存。")]),t._v(" "),s("p",[t._v("所以公司里那个常常崩的应用，在满足业务的情况下，或许可以使用流来优化一下内存使用。毕竟 64G 的云服务器也是要花不少钱的。")]),t._v(" "),s("h2",{attrs:{id:"multipart-x-mixed-replace-相应头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multipart-x-mixed-replace-相应头"}},[t._v("#")]),t._v(" multipart/x-mixed-replace 相应头")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://play.google.com/store/apps/details?id=com.pas.webcam",target:"_blank",rel:"noopener noreferrer"}},[t._v("IP Webcam"),s("OutboundLink")],1),t._v(" 可以使用 "),s("code",[t._v("<img>")]),t._v(" 标签来播放视频")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":a(551),loading:"lazy"}}),s("br"),t._v(" "),s("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":a(552),loading:"lazy"}})]),t._v(" "),s("p",[t._v("可以看到这个图片地址的响应头 "),s("code",[t._v("Content-Type")]),t._v(" 是 "),s("code",[t._v("multipart/x-mixed-replace")]),t._v("，而不是 "),s("code",[t._v("image/*")]),t._v(" 之类。查了一下资料，这个请求服务器可以不断的推送内容到浏览器，img 标签也能正确响应并替换为新的图片，达到播放“无声视频”的目的。")]),t._v(" "),s("p",[t._v("这里有篇文章可以参考："),s("a",{attrs:{href:"https://juejin.cn/post/6844903798998056967",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 multipart/x-mixed-replace 实现 http 实时视频流 - 掘金"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"node-js-stream-和-web-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js-stream-和-web-stream"}},[t._v("#")]),t._v(" Node.js Stream 和 Web Stream")]),t._v(" "),s("p",[t._v("我一直觉得 Nodejs 的 Stream 模块很难用（哪怕针对简单场景），每次使用都要现查资料，或者需要人工智能 "),s("a",{attrs:{href:"https://chat.openai.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GPTChat"),s("OutboundLink")],1),t._v(" 的帮助。")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":a(553),loading:"lazy"}})]),t._v(" "),s("p",[s("em",[t._v("上面的代码对不对我就不知道了。")])]),t._v(" "),s("p",[t._v("而 Web Stream 就不一样了，使用非常简单（默认策略）。 "),s("code",[t._v("fetch")]),t._v(" 可以以流的方式来接收 Http 请求结果，参考 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams",target:"_blank",rel:"noopener noreferrer"}},[t._v("Using readable streams - Web APIs | MDN"),s("OutboundLink")],1),t._v("。非常的方便实用。")]),t._v(" "),s("p",[t._v("下面我写一下 Yank Note 中使用到流的地方")]),t._v(" "),s("h3",{attrs:{id:"electron-的自定义-protocol-兼容-koa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#electron-的自定义-protocol-兼容-koa"}},[t._v("#")]),t._v(" Electron 的自定义 protocol 兼容 Koa")]),t._v(" "),s("p",[t._v("Koa 是处理网络请求的，需要监听端口。但是苹果应用商店的政策是不能随便监听端口，否则过不了审核，不能上架。好在 Electron 可以自定义 protocol，只需要将接收到的流转化为 Koa 可以处理的请求。Koa 返回的流能传递给 Electron 就好了。")]),t._v(" "),s("p",[t._v("下面这段代码中我模拟了一个 Request 给 Koa。然后再使用 Proxy 代理模拟了一个 Response。并将 Koa 的响应相关方法调用重定向到模拟的 Response。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformProtocolRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ProtocolRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" req "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IncomingMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("method\n  req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APP_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformBody")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uploadData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content-length'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_read "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_read\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("prop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keyof "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-disable-next-line @typescript-eslint/ban-ts-comment")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ts-ignore")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])]),s("h3",{attrs:{id:"fetch-流式处理响应内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fetch-流式处理响应内容"}},[t._v("#")]),t._v(" fetch 流式处理响应内容")]),t._v(" "),s("p",[t._v("浏览器的 Fetch API 提供了一种新的从服务器请求内容的方式，和传统 XMLHttpRequest 不一样，它支持使用流的方式来处理服务器端返回的内容。")]),t._v(" "),s("p",[t._v("Yank Note 目前有三个功能：")]),t._v(" "),s("ol",[s("li",[t._v("全文搜索")]),t._v(" "),s("li",[t._v("代码运行")]),t._v(" "),s("li",[t._v("监听当前文件变更")])]),t._v(" "),s("p",[t._v("这三个功能都会在服务端运行一段时间，途中服务器会实时的返回结果让前端展示或处理结果。因此按照通常的思路，这个功能使用 WebSocket 来做再合适不过了。实际上我一度也想过构建一个服务端和前端通信的通道。")]),t._v(" "),s("p",[t._v("但当我发现浏览器的 fetch API 支持流式处理后，我几乎没有犹豫的就使用的 fetch 来做上述的功能：实现简单，容易和现有的架构兼容。事实上，在没有 WebScoket 这个技术之前，前端和服务器端仍然可以通过使用“长轮询”来做到单向“实时通信”。")]),t._v(" "),s("blockquote",[s("p",[t._v("本文由「"),s("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note - 一款面向程序员的 Markdown 笔记应用"),s("OutboundLink")],1),t._v("」撰写")])])])}),[],!1,null,null,null);s.default=e.exports}}]);