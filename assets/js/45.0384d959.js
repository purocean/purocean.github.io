(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{556:function(t,a,s){t.exports=s.p+"assets/img/img-20230809124015.c6904b8f.png"},627:function(t,a,s){"use strict";s.r(a);var n=s(5),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note"),a("OutboundLink")],1),t._v(" 是我编写的笔记应用。这里我将会写下一些关于 Yank Note 的文章")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/yank-note-01"}},[t._v("Yank Note 系列 01 - 为什么要自己写笔记软件？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-02"}},[t._v("Yank Note 系列 02 - Markdown 渲染性能优化之路")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-03"}},[t._v("Yank Note 系列 03 - 同内存泄露的艰难战斗！")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-04"}},[t._v("Yank Note 系列 04 - 编辑和预览同步滚动方案")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-05"}},[t._v("Yank Note 系列 05 - 关于本地历史功能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-06"}},[t._v("Yank Note 系列 06 - 使用人工智能写文章是什么体验？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-07"}},[t._v("Yank Note 系列 07 - 性能暴增 132 倍的秘密——重写")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-08"}},[t._v("Yank Note 系列 08 - 优化 Katex 公式渲染性能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-09"}},[t._v("Yank Note 系列 09 - 关于流的使用")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-10"}},[t._v("Yank Note 系列 10 - 新增自定义快捷键功能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-11"}},[t._v("Yank Note 系列 11 - 预览内查找功能")])]),t._v(" "),a("li",[a("a",{attrs:{href:"/yank-note-12"}},[t._v("Yank Note 系列 12 - 高效构建仓库索引与知识图谱")])])])]),t._v(" "),a("p",[t._v("自定义快捷键是很多 Yank Note 用户的诉求，很抱歉这个功能鸽了好几年现在才做上。")]),t._v(" "),a("p",[t._v("这有两个原因，一方面是之前的开发阶段，Yank Note 很多地方不完善，有很多优先级更高的事情要做。另一方面则是做自定义快捷键功能要做得比较好，还是不太容易。比如要考虑各种键盘布局，解决快捷键冲突，一个易于使用的可视化配置界面等等。")]),t._v(" "),a("p",[t._v("不过好在 Yank Note 的核心设计考虑了要自定义快捷键的需求，这次做这个功能还算顺利。")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":s(556),loading:"lazy"}})]),t._v(" "),a("p",[t._v("可自定义快捷键的有三个部分：工作台、编辑器、应用")]),t._v(" "),a("h2",{attrs:{id:"工作台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作台"}},[t._v("#")]),t._v(" 工作台")]),t._v(" "),a("p",[t._v("Yank Note 可以通过使用 "),a("code",[t._v("ctx.action.registerAction")]),t._v(" 方法来注册一个操作，这个操作可以附带可响应的默认快捷键，如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerAction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base.find-in-repository'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// action 名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CtrlCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Shift"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认快捷键")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'command-desc.base_find-in-repository'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 描述")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("forUser")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户是否可以配置")]),t._v("\n  handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("通过上面的方法，就给工作台注册了一个“仓库中搜索”的 Action，关联的默认快捷键 是"),a("code",[t._v("CtrlCmd+Shift+F")])]),t._v(" "),a("p",[t._v("那么用户自定义快捷键后，怎样生效呢？")]),t._v(" "),a("p",[t._v("Yank Note 针对 Action 暴露了一个口子，可以拦截 action 的获取操作，进行一些定制性的修改。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tapAction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以在这里动态修改快捷键")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// action.keys = ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这样，工作台的自定义快捷键就完成了。")]),t._v(" "),a("h2",{attrs:{id:"编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编辑器"}},[t._v("#")]),t._v(" 编辑器")]),t._v(" "),a("p",[t._v("再说说自定义编辑器快捷键是怎样实现的。Yank Note 使用的是 Monaco 编辑器，也就是 VSCode 内部用的那个编辑器。因此这些快捷键定义好了，需要丢给 Monaco 来处理，具体可以参考这个 "),a("a",{attrs:{href:"https://github.com/microsoft/monaco-editor/issues/102",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/monaco-editor/issues/102"),a("OutboundLink")],1),t._v(" Issue，里面讨论了在 Monaco 编辑器中怎样更改快捷键的方法。")]),t._v(" "),a("p",[t._v("不过网上关于 Monaco 或者说 VScode 快捷键相关的资料还是不够丰富，我还是选择了看源码。比起看文档，看源码更能了解整个工作流程的细节。下面的结论基本上都是翻了 VSCode 的源码得到的。")]),t._v(" "),a("p",[t._v("在 VSCode 中，Action 和 Command 和 Keybinding 概念是分开的，注册一个 Action 同时可以注册一个带快捷键的 Command，并有附带 Keybingding 规则。相关代码非常多，因为 VSCode 要考虑的情况也非常复杂。而 Yank Note 这次做的自定义快捷键功能包括一个配置面板和一个应用插件，简化了（不考虑）很多情况，相关代码也就一千多行。")]),t._v(" "),a("h3",{attrs:{id:"让原有快捷键失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#让原有快捷键失效"}},[t._v("#")]),t._v(" 让原有快捷键失效")]),t._v(" "),a("p",[t._v("配置快捷键使用 "),a("code",[t._v("monaco.editor.addKeybindingRules")]),t._v(" 这个新引入不久的 API，有两种方法可以让一个已定义的快捷键失效：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addKeybindingRules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式一")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keybinding")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KeyCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'条件表达式'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式二")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keybinding")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KeyCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'条件表达式'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-editor.action.name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("虽然他们都表现为让 "),a("code",[t._v("F1")]),t._v(" 快捷键失效，但具体到内部原理还是不一样的。")]),t._v(" "),a("p",[t._v("方式一的工作原理是新添加一个规则，让后面的规则覆盖原来的规则。这里就是按"),a("code",[t._v("F1")]),t._v("匹配到了规则，但是没有可以运行的命令。")]),t._v(" "),a("p",[t._v("方式二则是从原有的规则表中"),a("strong",[t._v("删去")]),t._v("匹配到的规则（包含when表达式）。")]),t._v(" "),a("p",[t._v("如果要做一个"),a("strong",[t._v("移除")]),t._v("现有命令快捷键的功能，最好不要用方式一，因为方式一会把规则中的已有的都覆盖掉（比如两个命令使用同一个快捷键的情况），无差别禁用。方式二则可以精确的去掉某个快捷键规则，让原有规则中的其他规则还能生效。")]),t._v(" "),a("h3",{attrs:{id:"更改快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更改快捷键"}},[t._v("#")]),t._v(" 更改快捷键")]),t._v(" "),a("p",[t._v("不过更改一个快捷键光是移除还不够的，还需要添加一条新规则。这个规则需要知道命令的 id、快捷键的编码（VSCode 用一个数字来表示快捷键）以及这个规则原有的 when 表达式。")]),t._v(" "),a("p",[t._v("首先，用 "),a("code",[t._v("editor.getActions")]),t._v(" 可以获取所有命令的 ID"),a("br"),t._v("\n接着，用 "),a("code",[t._v("editor._standaloneKeybindingService._getResolver().lookupPrimaryKeybinding")]),t._v(" 获取一个命令原始的快捷键绑定情况，获得 when 表达式"),a("br"),t._v("\n最后，把 Yank Note 配置的快捷计算为一个 number 类型的编码，组装成规则后调用"),a("code",[t._v("editor.addKeybindingRules")]),t._v(" 接口塞进去")]),t._v(" "),a("p",[t._v("这三步都各有各的坑：")]),t._v(" "),a("ol",[a("li",[t._v("相关 API Monaco 编辑器也没暴露，只能翻源码+自己从实例里面找出来用用；")]),t._v(" "),a("li",[t._v("快捷键按键规则是一个数字，但这个数字我翻看 VSCode 源码，内部又没咋用（进入内部就解码了），但接口又只能接受这种参数，只能自己参考内部的解码方法写一个编码方法。")]),t._v(" "),a("li",[t._v("修饰键 KeyMod 中的 "),a("code",[t._v("CtrlCmd")]),t._v(" 和 "),a("code",[t._v("WinCtrl")]),t._v(" 也让我困惑了一阵子，好在 issue 有人解释 "),a("a",{attrs:{href:"https://github.com/microsoft/monaco-editor/issues/2570#issuecomment-877997943",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/monaco-editor/issues/2570#issuecomment-877997943"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Monaco 支持 Chord 按键序列，Yank Note 不支持")])]),t._v(" "),a("p",[t._v("这里就写这么多吧，希望能后面要自定义 Monaco 编辑器快捷键的伙伴做点参考。")]),t._v(" "),a("h2",{attrs:{id:"应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),a("p",[t._v("应用快捷键是指在 Electron 中注册的快捷键。这里只需要考虑将配置的快捷键转换为 Electron 接受的格式即可，可以参考 "),a("a",{attrs:{href:"https://www.electronjs.org/docs/latest/api/accelerator",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.electronjs.org/docs/latest/api/accelerator"),a("OutboundLink")],1),t._v(" 官方文档")]),t._v(" "),a("h2",{attrs:{id:"更多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多"}},[t._v("#")]),t._v(" 更多")]),t._v(" "),a("p",[t._v("上面做了这么多工作，还有一件事没仔细考虑，那就是适应不同的键盘布局。这个问题事实上不那么容易处理。目前 Yank Note 先放过这一部分了。这里有几篇文章写得很好，推荐阅读")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://rebornix.com/vscode/2019/08/11/web-keyboard-support/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 应用快捷键支持（一）：正确处理 Keyboard Event"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://rebornix.com/vscode/2019/08/25/web-keyboard-support-2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 应用快捷键支持（二）：code/key 的缺点和 Node native keymap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://rebornix.com/vscode/2019/09/11/web-keyboard-support-3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 应用快捷键支持（三）：VS Code 快捷键服务的实现"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("以上就是 Yank Note 在做自定义快捷键功能时候相关的一些我觉得值得分享的东西，希望大家能喜欢这个功能。")]),t._v(" "),a("blockquote",[a("p",[t._v("本文由「"),a("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note - 一款强大可扩展的 Markdown 编辑器，为生产力而生"),a("OutboundLink")],1),t._v("」撰写")])])])}),[],!1,null,null,null);a.default=e.exports}}]);