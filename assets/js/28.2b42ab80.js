(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{510:function(t,e,n){t.exports=n.p+"assets/img/9b0504a5.8bb6963a.png"},511:function(t,e,n){t.exports=n.p+"assets/img/0d67882c.fc6d641a.png"},512:function(t,e,n){t.exports=n.p+"assets/img/f2b9e861.f116df13.png"},611:function(t,e,n){"use strict";n.r(e);var r=n(5),a=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[e("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note"),e("OutboundLink")],1),t._v(" 是我编写的一款面向程序员的笔记应用。这里我将会写下一些关于 Yank Note 的文章")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"/yank-note-01"}},[t._v("Yank Note 系列 01 - 为什么要自己写笔记软件？")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-02"}},[t._v("Yank Note 系列 02 - Markdown 渲染性能优化之路")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-03"}},[t._v("Yank Note 系列 03 - 同内存泄露的艰难战斗！")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-04"}},[t._v("Yank Note 系列 04 - 编辑和预览同步滚动方案")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-05"}},[t._v("Yank Note 系列 05 - 关于本地历史功能")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-06"}},[t._v("Yank Note 系列 06 - 使用人工智能写文章是什么体验？")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-07"}},[t._v("Yank Note 系列 07 - 性能暴增 132 倍的秘密——重写")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-08"}},[t._v("Yank Note 系列 08 - 优化 Katex 公式渲染性能")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-09"}},[t._v("Yank Note 系列 09 - 关于流的使用")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-10"}},[t._v("Yank Note 系列 10 - 新增自定义快捷键功能")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-11"}},[t._v("Yank Note 系列 11 - 预览内查找功能")])]),t._v(" "),e("li",[e("a",{attrs:{href:"/yank-note-12"}},[t._v("Yank Note 系列 12 - 高效构建仓库索引与知识图谱")])])])]),t._v(" "),e("p",[t._v("tl;dr")]),t._v(" "),e("p",[e("strong",[t._v("我想做一款我自己（用户）可以完全掌控的笔记软件")])]),t._v(" "),e("h2",{attrs:{id:"缘起"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缘起"}},[t._v("#")]),t._v(" 缘起")]),t._v(" "),e("p",[t._v("从大学开始，我就一直在尝试使用各种笔记软件，从 Sublime Text 直接编辑文件，到使用印象笔记、OneNote等各种云笔记，最后我选择了为知笔记。")]),t._v(" "),e("p",[t._v("但是后来，为知笔记开始收费，越来越臃肿，反应慢，Bug 也多。最终，我放弃了它。备份笔记花了一些功夫，我开始不再相信云产品，自己电脑上的才是真正属于自己的。")]),t._v(" "),e("p",[t._v("于是我开始寻找一款本地笔记软件，断断续续是用了不少产品，这些当中只有 Joplin 让我使用时间最长，但也不是完全满意。后面，我还是回退到了使用 Sublime Text 写 Markdown 的方案。")]),t._v(" "),e("p",[t._v("最终在三年前的某一天，我决定自己写一个供自己使用的笔记工具。花了一个下午时间，我拼凑出了第一个可以使用的版本。使用 Node.js 做服务端，Vue 做前端。功能简陋到什么程度呢？只有读取和写入文件的功能；没有按钮，只有快捷键；界面随意搭在一起。完完全全就是一个功能简陋且丑陋的记事本。")]),t._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":n(510),loading:"lazy"}})]),t._v(" "),e("p",[t._v("我当时也不知道自己需要什么，要做出什么。后来我才慢慢找到这样的目标")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("界面字大不费眼 😃")]),t._v(" "),e("li",[t._v("Markdown 撰写")]),t._v(" "),e("li",[t._v("图片文件保存在本地，导出 Markdown 文件可简单处理离线工作")]),t._v(" "),e("li",[t._v("支持一些流程图表绘制 plantuml mermaid")]),t._v(" "),e("li",[t._v("支持加密解密，用来保存账号等隐私文件，文件可单独设置密码")]),t._v(" "),e("li",[t._v("不需要更多花哨功能，简单够用就行")]),t._v(" "),e("li",[t._v("尽量少依赖三方库，也不花心思维护，杂凑在一起的功能，恰好工作即可 ^_^")]),t._v(" "),e("li",[t._v("在文档中运行 PHP Python Node.js 代码块")])])]),t._v(" "),e("p",[t._v("而这时候，界面长这样"),e("br"),t._v(" "),e("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":n(511),loading:"lazy"}})]),t._v(" "),e("p",[t._v("总的来说，这时候我还是都是按照自己想法来做这个应用，完全不考虑是否美观，是否方便，只要功能满足自己需求即可。")]),t._v(" "),e("p",[t._v("后来，我的一位同事觉得这个应用很实用，开始使用它。我在掘金上发了一篇文章 "),e("a",{attrs:{href:"https://juejin.cn/post/6844903614222172173",target:"_blank",rel:"noopener noreferrer"}},[t._v("Markdown 编辑器 (自家用)"),e("OutboundLink")],1),t._v("，掘友 "),e("a",{attrs:{href:"https://juejin.cn/user/307518985733965",target:"_blank",rel:"noopener noreferrer"}},[t._v("@KDA"),e("OutboundLink")],1),t._v(" 评论道：“求更新完善，很好用”。于是我开始想，这个东西除了我自己，是不是可以再完善完善，给其他人使用。")]),t._v(" "),e("p",[t._v("但是这时，才发现我还没给这个编辑器取一个名字。GitHub 仓库名是随意起的“yn”，所以顺着这个，正式起名 “Yank Note”")]),t._v(" "),e("p",[t._v("为了方便其他人使用，也决定采用 Electron 开发，方便启动运行。")]),t._v(" "),e("h2",{attrs:{id:"进化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进化"}},[t._v("#")]),t._v(" 进化")]),t._v(" "),e("p",[t._v("这里再思考一下，我究竟需要一款怎样的笔记应用，最后我定了下面几点原则，按照重要性排序")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("拒绝云服务:")]),t._v(" 数据要保存在本地，应用也要在本机运行，备份和同步的需求可以走 Git 或者云盘，私人笔记，无需协作功能。甚至于图床之类，也不要使用，就存本地。")]),t._v(" "),e("li",[e("strong",[t._v("拒绝专有格式:")]),t._v(" 使用 Markdown 文件保存所有信息，不要给我什么 json 格式或者其他格式的，万一我哪一天弃用这个软件，要能很方便迁移。")]),t._v(" "),e("li",[e("strong",[t._v("开源:")]),t._v(" 一款软件，我要长久使用，那么不能是封闭的。如果哪一天应用作者不更新了，我要能自己 fork 一份来自己维持基本的运行。")]),t._v(" "),e("li",[e("strong",[t._v("可拓展:")]),t._v(" 这款应用要具备足够的拓展性，我遇到一些自己特定的需求，或者使用软件有不顺手的地方，我要能自己写插件或者拓展来修改和实现。")]),t._v(" "),e("li",[e("strong",[t._v("克制:")]),t._v(" 应用需要保持简单，不要太臃肿，不要太花哨，不要有过多动画干扰我的操作。比如 Notion 的菜单动画，第一时间感觉很炫酷，但是使用一下就会觉得很拖沓。而它的一些工具提示又展示太快，变成操作的干扰项。这里我非常认同 "),e("a",{attrs:{href:"https://www.sublimetext.com/blog/articles/sublime-merge",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sublime Merge"),e("OutboundLink")],1),t._v(" 的理念。Sublime Merge 是我使用过的体验最好的 Git 客户端，使用它是一种享受。")]),t._v(" "),e("li",[e("strong",[t._v("跨平台:")]),t._v(" 我同时使用 Windows，macOS，Android，iOS。我需要让这款应用是跨平台的，至少在桌面端是要跨平台的。不过我的大部分笔记和文章都是在电脑上完成，手机上只需要记录一些灵感即可，这种需求很多软件都能完成得很好，比如 iOS 自带的备忘录。另外既然文件格式也不是专属，也不绑定云服务，那么很多移动端的 Markdown 编辑器也能很好的工作，在移动端跨平台的需求就没那么强烈。")])]),t._v(" "),e("p",[e("strong",[t._v("上面的原则都是为了让我可以长久使用一款软件。如果你认同上面的观点，那么 Yank Note 或许是你的菜。")])]),t._v(" "),e("p",[t._v("我是一枚标准的程序员，后端前端嵌入式都搞过，偶尔还做下白帽子，现在主要搞前端。这让我的笔记需求有一些特殊性，下面说下我使用 Yank Note 的一些具体场景。")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("做笔记：")]),t._v(" 这是基本需求，我需要做的笔记中有不少代码，代码最好能方便复制和运行。比如学习一些 js 特性的时候，我会将代码片段存下来，下次查看立马就能运行。")]),t._v(" "),e("li",[e("strong",[t._v("工作日志：")]),t._v(" 刚毕业那会儿，工作上什么事情基本都能记在脑子里，现在不行了，需要有个地方记录，安排一些待办事项，工作安排等。")]),t._v(" "),e("li",[e("strong",[t._v("写文章：")]),t._v(" 我发文章比较少，很多文章都是在工作时候写方案和文档。这时候笔记应用能支持嵌入图形就比较重要。")]),t._v(" "),e("li",[e("strong",[t._v("编写工具：")]),t._v(" 平时在工作中，有不少脚本工具，之前都比较散落在各处或者说明比较少，后续使用就比较麻烦。而现在它们都统一在 Yank Note 中组织关联。很多脚本和代码都能更方便打开，也能有更丰富的说明和 UI 界面。")])]),t._v(" "),e("p",[t._v("经过上面这些场景洗礼后，Yank Note 长这样")]),t._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"Img","data-src":n(512),loading:"lazy"}})]),t._v(" "),e("h2",{attrs:{id:"一些问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些问题"}},[t._v("#")]),t._v(" 一些问题")]),t._v(" "),e("p",[e("strong",[t._v("完美不是没有什么可以增加的，而是没有什么可以减少的。")])]),t._v(" "),e("p",[t._v("下面是一些用户问过我，和我做 Yank Note 的时候，考虑过的一些问题，大部分都是关于“"),e("strong",[t._v("为什么不")]),t._v("”。")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("Q: 为什么要采用 C/S 架构？")]),e("br"),t._v("\nA: 我喜欢浏览器，我平时都是在浏览器中使用 Yank Note，配合浏览器插件我可以做更多事情。现在的架构是重客户端轻服务端，未来还会继续精简服务端逻辑。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 为什么要使用编辑预览分开，而不是所见即所得？")]),e("br"),t._v("\nA: 一来是因为我喜欢文本，我喜欢控制文本，我更喜欢代码的方式来写东西。二是技术原因，富文本编辑器很难做好。我体验过不少富文本编辑器/组件，都很难达到我想要的体验，还不如直接文本来得直接。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 为什么没有工具条来调整格式？")]),e("br"),t._v("\nA: 和上一条一样，我喜欢文本，不喜欢过多的 UI。用户应该使用文本来控制格式，写 Markdown。使用 Yank Note 的用户应该是熟悉 Markdown 的。当然我也可以偷懒不做这个功能了。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 为什么不做成 VSCode 插件？")]),e("br"),t._v("\nA: VSCode 插件限制还是比较多，一些功能不能很方便实现，我还是更喜欢浏览器来得简单直接。如果你需要，这个 "),e("a",{attrs:{href:"https://github.com/shd101wyy/markdown-preview-enhanced",target:"_blank",rel:"noopener noreferrer"}},[t._v("VSCode 插件"),e("OutboundLink")],1),t._v(" 很不错。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 为什么不集成 Git 功能，自动推送到 Github？")]),e("br"),t._v("\nA: 我自己的几个笔记仓库都是依托 Github 储存的，所以这个需求还是比较迫切的。但是我还是想要把 Git 集成排除在 Yank Note 功能之外。每个用户都有自己的习惯来管理 Git 仓库，比如我喜欢 Sublime Merge。当然为了便捷，我也写了一个 "),e("a",{attrs:{href:"https://github.com/purocean/yn/issues/65#issuecomment-962472562",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note 插件"),e("OutboundLink")],1),t._v(" 来快速提交和推送内容。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 为什么不做成在线版？")]),e("br"),t._v("\nA: Yank Note 从一开始就是 C/S 架构，只是现在多了 Electron 的一些功能，要做成在线版还是很容易。比如现在的 "),e("a",{attrs:{href:"https://yank-note.vercel.app/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线 Demo"),e("OutboundLink")],1),t._v(" 就是屏蔽了接口请求的版本。但是做成 Web 服务，那么就违背了我的第一条原则，我不希望这个编辑器脱离用户的掌控。另外就是 Yank Note 因为异常开放，为了拓展性，安全问题很难考虑周全（我是业余白帽子）。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 为什么不做文件关联，可以直接打开 Markdown 文件的功能？")]),e("br"),t._v("\nA: 正如上面所说，Yank Note 异常开放，有代码运行，宏替换，HTML 解析等功能。为了更高的拓展性，几乎将内部能力完全放开，包括一些危险的能力如命令执行，任意文件读写等，因此我没做文件关联功能。只能从仓库打开，可以让用户更谨慎的打开外来文件。")]),t._v(" "),e("li",[e("strong",[t._v("Q: 是否考虑做成双链笔记？")]),e("br"),t._v("\nA: 双链笔记很火，但是我体验过一些双链笔记软件，如 Obsidian，我发现我并不需要它。这篇文章的观点我比较赞同 "),e("a",{attrs:{href:"https://sspai.com/post/65273",target:"_blank",rel:"noopener noreferrer"}},[t._v("请不要神化双链笔记"),e("OutboundLink")],1),t._v("。我实际使用笔记的体验来看，我最需要文档之间的单向链接，但是粒度不需要到“块”，到标题即可。反向关联我只需要能知道当前文档被谁引用即可。我不赞同扁平的笔记结构，就像写代码，我不赞同所有逻辑都在一个文件。我需要层级，需要能引用模块，知道当前模块被谁引用就够了。这方面 Yank Note 还要加强。")])]),t._v(" "),e("h2",{attrs:{id:"未来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#未来"}},[t._v("#")]),t._v(" 未来")]),t._v(" "),e("p",[t._v("这几年来我一直使用 Yank Note，开发的功能也是因为自己和用户有需求。我在开发 Yank Note 的过程中，我的编程技能也提升不少，所以哪怕是出于学习的目的，我也还会继续开发维护下去。")]),t._v(" "),e("p",[t._v("现在能预计到的未来几个完善的点：")]),t._v(" "),e("ol",[e("li",[t._v("增强基础体验")]),t._v(" "),e("li",[t._v("精简服务端代码")]),t._v(" "),e("li",[t._v("强化文档之间的链接")]),t._v(" "),e("li",[t._v("开发简单的移动端应用")])]),t._v(" "),e("p",[t._v("如果你对 Yank Note 感兴趣，想使用或者参与贡献，可以到 "),e("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),e("OutboundLink")],1),t._v(" 了解更多。")]),t._v(" "),e("blockquote",[e("p",[t._v("本文由「"),e("a",{attrs:{href:"https://github.com/purocean/yn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yank Note - 一款面向程序员的 Markdown 笔记应用"),e("OutboundLink")],1),t._v("」撰写")])])])}),[],!1,null,null,null);e.default=a.exports}}]);